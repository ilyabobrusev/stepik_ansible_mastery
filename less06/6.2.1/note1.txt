{% if ansible_os_family == "Debian" %}
This is a Debian-based system.
{% elif ansible_os_family == "RedHat" %}
This is a RedHat-based system.
{% else %}
Unknown OS.
{% endif %}

#######################################################

System role: {{ system_role | default("not defined") }}

#######################################################


{% for item in список %}
  {{ item }}
{% endfor %}

#######################################################

Пример 1: перебираем список
# group_vars/all.yml
packages:
  - nginx
  - git
  - curl

Installed packages:
{% for pkg in packages %}
- {{ pkg }}
{% endfor %}

Вывод:

Installed packages:
- nginx
- git
- curl

#######################################################

Пример 2: перебираем словарь
users:
  alice: /bin/bash
  bob: /bin/zsh

Users:
{% for username, shell in users.items() %}
- {{ username }} uses {{ shell }}
{% endfor %}

#######################################################

Полезные переменные внутри цикла:
Переменная 	Значение
loop.index   	номер итерации (с 1)
loop.index0     номер итерации (с 0)
loop.first   	true на первой итерации
loop.last    	true на последней итерации

 
Пример:
{% for item in items %}
  {% if loop.first %}Start of list{% endif %}
  - {{ item }}
  {% if loop.last %}End of list{% endif %}
{% endfor %}

#######################################################

Фильтры применяются так:

{{ переменная | фильтр }}

Можно комбинировать фильтры:

{{ переменная | фильтр1 | фильтр2 }}

#######################################################

Самые полезные фильтры в Ansible (с примерами)

| Пример         | Результат       |           |
| -------------- | --------------- | --------- |
| \`{{ 'hello'   | upper }}\`      | `HELLO`   |
| \`{{ 'WORLD'   | lower }}\`      | `world`   |
| \`{{ 'ansible' | capitalize }}\` | `Ansible` |

#######################################################

replace(old, new)

{{ 'server-prod' | replace('prod', 'dev') }}

Результат: server-dev

#######################################################

default('значение')

Возвращает значение по умолчанию, если переменная undefined или пустая (None, "", [], {}).

{{ server_role | default('undefined') }}


#######################################################

join(', ')

Объединяет список значений в строку с разделителем.

ports:
  - 80
  - 443
  - 8080

{{ ports | join(', ') }}

Результат: 80, 443, 8080

#######################################################

length

Возвращает количество элементов в списке, строке или словаре.

Total users: {{ users | length }}

Результат: например, 2

#######################################################

sort, unique, reverse

Фильтры для работы со списками:

Sorted: {{ mylist | sort }}
Reversed: {{ mylist | reverse }}
Unique: {{ mylist | unique }}

Пример:

mylist:
  - z
  - a
  - a
  - b

{{ mylist | sort | unique }}

Результат: ['a', 'b', 'z']

#######################################################

int, float

Преобразование в числа (часто используется при арифметике или сравнении):

{{ "42" | int + 10 }}   → 52
{{ "3.14" | float * 2 }} → 6.28

#######################################################

to_nice_json, to_yaml, to_json

Сериализация структур данных для отладки или генерации конфигов:

{{ my_dict | to_yaml }}
{{ my_dict | to_json }}

#######################################################

Комбинирование фильтров — как функции в конвейере

{{ some_var | default('unknown') | upper }}

Сначала:

    Проверяется: some_var задан?
    Если нет — подставляется 'unknown'
    Затем строка превращается в 'UNKNOWN'
