
✅ Лучшие практики при создании ролей в Ansible
1. Единая ответственность роли

Роль должна выполнять одну конкретную задачу. Например, установка и настройка Nginx — это одна роль. Если вы создаёте LAMP-стек, лучше разделить его на отдельные роли: apache, mysql, php и т.д. Это повышает переиспользуемость и упрощает поддержку.
2. Стандартизированная структура ролей

Используйте команду ansible-galaxy init для создания роли с предопределённой структурой:

ansible-galaxy init my_role

Это обеспечит наличие всех необходимых каталогов и файлов, таких как tasks/, handlers/, defaults/, vars/, templates/, files/, meta/, tests/ и README.md.
3. Использование defaults/ и vars/

    defaults/main.yml: содержит переменные по умолчанию, которые могут быть переопределены пользователем. Используйте их для настраиваемых параметров роли.

    vars/main.yml: содержит переменные с высоким приоритетом, которые не должны переопределяться. Используйте их для внутренних переменных роли.

4. Именование переменных с префиксом роли

Чтобы избежать конфликтов переменных между ролями, добавляйте префикс с именем роли:

nginx_port: 80

5. Документирование роли

Создайте файл README.md в корне роли, где опишите:

    Назначение роли

    Переменные и их значения по умолчанию

    Примеры использования

    Зависимости от других ролей

Это особенно важно, если вы планируете публиковать роль в Ansible Galaxy.
6. Определение зависимостей в meta/main.yml

Если ваша роль зависит от других ролей, укажите их в файле meta/main.yml:

dependencies:
  - role: common
  - role: apache

7. Тестирование ролей с помощью Molecule

Используйте Molecule для тестирования ролей в изоляции:

Используйте Molecule для функционального тестирования роли в изолированном окружении:
 установить Molecule и драйвер (например, Docker)


pip install molecule[docker]

инициализировать сценарий тестирования для роли my_role

molecule init scenario -r my_role -d docker

запустить полный цикл тестирования

molecule test

или поэтапно:

molecule create    # поднять инстансы
molecule converge  # применить роль
molecule verify    # прогнать проверки (Testinfra, Goss и др.)
molecule destroy   # удалить инстансы

Если нужен линтинг в рамках Molecule, добавьте в molecule.yml:

lint:
  name: ansible-lint

— тогда при molecule test сначала выполнится ansible-lint, а затем остальные этапы.

Это позволит вам проверить работу роли до её применения в продакшене.

8. Использование ansible-lint для проверки качества кода

Установите ansible-lint для статического анализа ваших ролей:

pip install ansible-lint
ansible-lint roles/my_role

Это поможет выявить потенциальные ошибки и несоответствия лучшим практикам.
9. Избегайте жёстко закодированных значений

Используйте переменные и шаблоны вместо жёстко заданных значений. Это повысит гибкость и переиспользуемость роли.
10. Хранение ролей в системе контроля версий

Используйте Git для хранения и управления версиями ваших ролей. Это упростит совместную работу и отслеживание изменений.
